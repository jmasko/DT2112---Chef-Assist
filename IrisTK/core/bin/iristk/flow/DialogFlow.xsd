<?xml version="1.0" encoding="UTF-8"?>
<schema elementFormDefault="qualified"
    targetNamespace="iristk.flow.DialogFlow"
    xmlns="http://www.w3.org/2001/XMLSchema" xmlns:flow="iristk.flow">
    <import namespace="iristk.flow" schemaLocation="flow.xsd"/>
    <element name="say">
        <complexType mixed="true">
            <sequence>
                <any maxOccurs="unbounded" minOccurs="0"
                    namespace="##any" processContents="lax"/>
            </sequence>
            <attribute name="text" type="string">
                <annotation>
                    <documentation>The text to speak (can also be provided as a text node)</documentation>
                </annotation>
            </attribute>
            <attribute default="false" name="async" type="string">
                <annotation>
                    <documentation>Whether to immediately return and produce speech asynchronous</documentation>
                </annotation>
            </attribute>
            <attribute default="false" name="ifsilent" type="string">
                <annotation>
                    <documentation>Only say this if the system is silent</documentation>
                </annotation>
            </attribute>
            <attribute default="null" name="display" type="string">
                <annotation>
                    <documentation>A nicely formatted text representation for display purposes</documentation>
                </annotation>
            </attribute>
            <attribute default="null" name="audio" type="string">
                <annotation>
                    <documentation>An audio file to play instead of synthesising</documentation>
                </annotation>
            </attribute>
            <attribute default="false" name="abort" type="string">
                <annotation>
                    <documentation>Whether to abort the current speech plan or just append to it</documentation>
                </annotation>
            </attribute>
        </complexType>
    </element>
    <element name="listen">
        <complexType>
            <sequence>
                <any maxOccurs="unbounded" minOccurs="0"
                    namespace="##any" processContents="lax"/>
            </sequence>
            <attribute default="8000" name="timeout" type="string"/>
            <attribute default="500" name="endSil" type="string"/>
            <attribute default="1" name="nbest" type="string"/>
            <attribute name="context" type="string"/>
        </complexType>
    </element>
    <element name="prompt">
        <complexType mixed="true">
            <sequence>
                <any maxOccurs="unbounded" minOccurs="0"
                    namespace="##any" processContents="lax"/>
            </sequence>
            <attribute name="text" type="string"/>
            <attribute default="8000" name="timeout" type="string"/>
            <attribute default="500" name="endSil" type="string"/>
            <attribute default="1" name="nbest" type="string"/>
            <attribute name="context" type="string"/>
        </complexType>
    </element>
    <element name="wait">
        <complexType>
            <sequence>
                <any maxOccurs="unbounded" minOccurs="0"
                    namespace="##any" processContents="lax"/>
            </sequence>
            <attribute default="1000" name="msec" type="string"/>
        </complexType>
    </element>
</schema>
